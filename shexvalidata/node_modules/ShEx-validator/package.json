{
  "name": "ShEx-validator",
  "version": "1.0.0",
  "description": "Parses and a ShEx schema and ShEx data file and validates the data against the schema.",
  "main": "index.js",
  "scripts": {
    "test": "node ./node_modules/jasmine-node/bin/jasmine-node specs"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/HeriotWattMEng2015/ShEx-validator"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/HeriotWattMEng2015/ShEx-validator/issues"
  },
  "homepage": "https://github.com/HeriotWattMEng2015/ShEx-validator",
  "dependencies": {
    "exit": "^0.1.2",
    "minimist": "^1.1.0",
    "n3": "^0.4.1",
    "promise": "^6.1.0"
  },
  "devDependencies": {
    "jasmine-node": "^1.14.5",
    "pegjs": "^0.8.0"
  },
  "readme": "# ShEx-validator [![Build Status](https://travis-ci.org/HeriotWattMEng2015/ShEx-validator.svg?branch=master)](https://travis-ci.org/HeriotWattMEng2015/ShEx-validator)\n\nParses and a ShEx schema and ShEx data file and validates the data against the schema.\n\nA standalone Node module with a command line interface and validate() function as described below\n\n## Installation\n\n```sh\nnpm install git@github.com:HeriotWattMEng2015/ShEx-validator.git\n```\n\n## Usage\n### In Code\n```javascript\nvar validator = require('ShEx-validator');\n\nvar schemaText = \"...\";\n\nvar dataText = \"...\";\n\nvar callbacks = {\n    schemaParsed: function (schema) {...},\n    schemaParseError: function (errorMessage) {...},\n    dataParsed: function (data) {...},\n    dataParseError: function (errorMessage) {...},\n    tripleValidated: function (validation) {...},\n    validationError: function (validationError) {...}\n};\n\nvar options = {\n    closedShapes: true|false,\n    startingNodes: [\"...\", ...]\n};\n\nvalidator.validate(schemaText, dataText, callbacks, options);\n```\n\n### On Command Line\n\nWhile developing: `node index.js tests/test.shex tests/test.turtle Issue1`\n\nIn future when globally installed:\n\n<!--- BEGIN USAGE -->\n    Usage:\n        ShEx-validator [options] SCHEMA DATA STARTING_NODE [STARTING_NODE...]\n\n    Options:\n        -c, --closed-shape  Schema must mention all used shapes\n        -h, --help          print usage information\n<!--- END USAGE -->\n\n## Development\n\nThe main access point is `index.js`.\n\nCurrently only n3.js is used for parsing the data but others can easily be added in `dataParser.js`.\n\nValidation is still performed by a combination of Erics PEG generated `includes/shexParser` and `includes/RDF.js`.\n\n### Tests\nTests are done using Jasmine, and the test specifications are located in specs/.\n\nTo run the tests do: \n```sh\nnpm test\n```\n### Dependencies\n\n- [minimist](https://github.com/substack/minimist): parse argument options\n- [n3](https://github.com/RubenVerborgh/N3.js): Lightning fast, asynchronous, streaming Turtle / N3 / RDF library.\n- [promise](https://github.com/then/promise): Bare bones Promises/A+ implementation\n\n### Dev Dependencies\n\n- [jasmine-node](https://github.com/mhevery/jasmine-node): DOM-less simple JavaScript BDD testing framework for Node\n- [pegjs](https://github.com/dmajda/pegjs): Parser generator for JavaScript\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "ShEx-validator@1.0.0",
  "_shasum": "3e4c1a5648a02073a0c38de33a3b9d217d916ad7",
  "_resolved": "git://github.com/HeriotWattMEng2015/ShEx-validator.git#a04c9cafa0ce5ff64d89577b18c74c7c0bf2c44e",
  "_from": "git://github.com/HeriotWattMEng2015/ShEx-validator.git",
  "_fromGithub": true
}
